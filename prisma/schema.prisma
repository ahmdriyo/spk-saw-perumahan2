generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Alternative {
  id        Int                @id @default(autoincrement())
  nama      String
  lokasi    String
  gambar    String?
  createdAt DateTime           @default(now())

  values    AlternativeValue[]  // hubungan dengan semua nilai per kriteria

  @@map("alternatives")
}

model Criteria {
  id     Int                @id @default(autoincrement())
  nama   String
  tipe   CriteriaType       // "benefit" atau "cost"
  bobot  Float              // misal: 0.4

  values AlternativeValue[]

  @@map("criterias")
}

model AlternativeValue {
  id            Int         @id @default(autoincrement())
  nilai         Float       // nilai untuk criteria ini
  alternativeId Int
  criteriaId    Int

  alternative   Alternative @relation(fields: [alternativeId], references: [id], onDelete: Cascade)
  criteria      Criteria    @relation(fields: [criteriaId], references: [id], onDelete: Cascade)

  @@unique([alternativeId, criteriaId])
  @@map("alternative_values")
}

model History {
  id                Int      @id @default(autoincrement())
  tanggal           DateTime @default(now())
  hasil             Json     // JSON hasil peringkat dan normalisasi
  alternatifTerbaik String   // nama perumahan terbaik
  
  @@map("history")
}

enum CriteriaType {
  benefit
  cost
}
